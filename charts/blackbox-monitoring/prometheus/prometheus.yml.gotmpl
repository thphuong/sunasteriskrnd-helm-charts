global:
  evaluation_interval: 30s
  scrape_interval: 30s

rule_files:
- /etc/config/recording_rules.yml
- /etc/config/alerting_rules.yml

scrape_configs:
{{- range .Values.targets }}
- job_name: {{ .name }}
  kubernetes_sd_configs:
  - role: endpoints
    namespaces:
      names:
      - {{ $.Release.Namespace }}
  scrape_interval: {{ .interval | default $.Values.defaults.scrapeInterval }}
  scrape_timeout: {{ .timeout | default $.Values.defaults.scrapeTimeout }}
  metrics_path: /probe
  params:
    module:
    - http_2xx
    target:
    - {{ .url }}
  scheme: http
  honor_labels: false
  relabel_configs:
  - action: keep
    source_labels:
    - __meta_kubernetes_service_name
    regex: ({{ template "common.subchart.tpl" (list $ "blackbox-exporter" "prometheus-blackbox-exporter.fullname") }})
  - action: keep
    source_labels:
    - __meta_kubernetes_endpoint_port_name
    regex: http
  metric_relabel_configs:
  - source_labels:
    - instance
    target_label: instance
    replacement: {{ .url }}
  - source_labels:
    - target
    target_label: target
    replacement: {{ .name }}
{{- end }}

alerting:
  alertmanagers:
  - kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - {{ .Release.Namespace }}
    {{- if .Values.prometheus.alertmanager.prefixURL }}
    path_prefix: {{ .Values.prometheus.alertmanager.prefixURL }}
    {{- end }}
    scheme: http
    relabel_configs:
    - action: keep
      source_labels:
      - __meta_kubernetes_service_name
      regex: ({{ template "common.subchart.tpl" (list . "prometheus" "prometheus.alertmanager.fullname") }})
    - action: keep
      source_labels:
      - __meta_kubernetes_endpoint_port_name
      regex: http
