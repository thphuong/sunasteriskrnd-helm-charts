apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.multicast.enabled }}
      hostNetwork: {{ .Values.multicast.hostNetwork }}
      dnsPolicy: {{ .Values.multicast.dnsPolicy }}
      {{- end }}
      {{- include "soketi.imagePullSecrets" . | indent 6 }}
      serviceAccountName: {{ include "soketi.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: soketi
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ include "soketi.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --config
        - /soketi/config.json
        volumeMounts:
        - name: config
          mountPath: /soketi
        {{- with .Values.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - name: soketi
          containerPort: 6001
          protocol: TCP
        - name: metrics
          containerPort: 9601
          protocol: TCP
        - name: cluster
          containerPort: 11002
          protocol: UDP
        env:
        - name: SOKETI_PORT
          value: "6001"
        - name: SOKETI_MODE
          value: "full"
        {{- range $name, $val := .Values.extraEnvVars }}
        - name: {{ $name }}
          value: {{ $val }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 6001
            httpHeaders:
            - name: X-Kube-Healthcheck
              value: "Yes"
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /accept-traffic
            port: 6001
            httpHeaders:
            - name: X-Kube-Healthcheck
              value: "Yes"
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
      {{- if .Values.networkWatcher.enabled }}
      - name: network-watcher
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.networkWatcher.image.repository }}:{{ .Values.networkWatcher.image.tag }}"
        imagePullPolicy: {{ .Values.networkWatcher.image.pullPolicy }}
        {{- with .Values.networkWatcher.extraVolumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        command:
        - php
        - /app/network-watcher
        - network:watch
        env:
        - name: KUBE_CONNECTION
          value: cluster
        - name: SERVER_PORT
          value: {{ .Values.service.port | quote }}
        - name: MEMORY_PERCENT
          value: {{ .Values.networkWatcher.threshold | quote }}
        - name: CHECKING_INTERVAL
          value: {{ .Values.networkWatcher.interval | quote }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          {{- toYaml .Values.networkWatcher.resources | nindent 10 }}
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "common.names.fullname" . }}
      {{- with .Values.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
